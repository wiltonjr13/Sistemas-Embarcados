1.Crie um código em C para gerar três processos-filho usando o fork().


#include <stdio.h>
#include <stdlib.h>
#include <sys.types.h>
#include <unistd.h>


int main(){
int k=0;
for(k=0; k<3; k++){
        int pid = fork();
                if(pid<0){
    			exit();
   			}
		else if (pid>0){
			printf(“Este é o processo pai \n”);
			}
		else {
			printf(“Este é o processo pai \n”);	
			exit(0);
         		}
		}
}



3. Crie um código em C que recebe o nome de diversos comandos pelos argumentos de entrada (argc e *argv[]), e executa cada um usando fork() e exec(). 


#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>


int main(int argc, const char *argv[ ]){
char *lista_de_argumentos[2] = (“null, null”);
int i;
for(i=1; i<argc; i++){
                        if (fork()==0){
                                lista_de_argumentos[0] =(char*) argv[i];
				execvp(lista_de_argumentos[0], lista_de_argumentos);
				exit(0);
                 		}
		     }
        wait(null);
     return 0;
}


4. Crie um código em C que gera três processos-filho usando o fork(), e que cada processo-filho chama a seguinte função uma vez:


#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>


int v_global = 0; // Variavel global para este exemplo
void Incrementa_Variavel_Global(pid_t id_atual)
{
        v_global++;
        printf("ID do processo que executou esta funcao = %d\n", id_atual);
        printf("v_global = %d\n", v_global);
}


int main(){
int kid=0;
for(kid=0; kid<3; ++kid){
	int pid = fork();
	pid_t id_atual=getpid();
	if (pid<0){
     		   exit(-1);
    		   }


	else if(pid==0){
		incrementa_Variavel_Global(id_atual);
		printf("\nEsse é o processo filho.\n");
		exit(0);
 		}
	else{
		printf("\nEsse é o processo pai.\n");
		wait(NULL);
		}
	}
}


5. Repita a questão anterior, mas desta vez faça com que o processo-pai também chame a função Incrementa_Variavel_Global(). Responda: a variável global v_global foi compartilhada por todos os processos-filho e o processo-pai, ou cada processo enxergou um valor diferente para esta variável?




#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <unistd.h>


int v_global = 0; // Variavel global para este exemplo
void Incrementa_Variavel_Global(pid_t id_atual)
{
        v_global++;
        printf("ID do processo que executou esta funcao = %d\n", id_atual);
        printf("v_global = %d\n", v_global);
}


int main(){
int kid=0;
for(kid=0; kid<3; ++kid){
	int pid = fork();
	pid_t id_atual=getpid();
			if (pid<0){
    				   exit(-1);
    				   }
			else if(pid==0){
				    Incrementa_Variavel_Global(id_atual);
				    printf("\nEsse é o processo filho.\n");
				    exit(0);
					}
			else{
				Incrementa_Variavel_Global(id_atual);
				printf("\nEsse é o processo Darth Vader.\n");
				wait(NULL);
			     }
			}
}